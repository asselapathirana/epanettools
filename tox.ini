; a generative tox configuration, see: https://testrun.org/tox/latest/config.html#generative-envlist

[tox]
envlist =
    clean,
    check,
    {py27,py33,py34,py35,py36,py37,pypy},
    report,
    docs
skip_missing_interpreters =
    true
skipdist=True

[testenv]
basepython =
    pypy: {env:TOXPYTHON:pypy}
    {py27,docs,spell}: {env:TOXPYTHON:python2.7}
    py33: {env:TOXPYTHON:python3.3}
    py34: {env:TOXPYTHON:python3.4}
    py35: {env:TOXPYTHON:python3.5}
    py36: {env:TOXPYTHON:python3.6}
    py37: {env:TOXPYTHON:python3.7}
    {clean,check,report,extension-coveralls,coveralls,codecov}: python3.7
    bootstrap: python
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
usedevelop = false
deps =
    pytest
    pytest-travis-fold
    pytest-cov
    nose

commands =
    python setup.py build {posargs}
    python setup.py install
    py.test --cov --cov-report=term-missing -vv tests
    python -m doctest README.rst

;;;[testenv:bootstrap]
;;;deps =
    ;;;jinja2
    ;;;matrix
    ;;;nose
;;;skip_install = true
;;;commands =
    ;;;python ci/bootstrap.py
;;;passenv =
    ;;;*

;;;[testenv:spell]
;;;setenv =
    ;;;SPELLCHECK=1
;;;commands =
    ;;;sphinx-build -b spelling docs dist/docs
;;;skip_install = true
;;;deps =
    ;;;-r{toxinidir}/docs/requirements.txt
    ;;;sphinxcontrib-spelling
    ;;;pyenchant
    ;;;nose

;;;[testenv:docs]
;;;deps =
    ;;;-r{toxinidir}/docs/requirements.txt
    ;;;nose
;;;commands =
    ;;;sphinx-build -E -b doctest docs dist/docs
    ;;;sphinx-build -E -b html docs dist/docs
    ;;;sphinx-build -b linkcheck docs dist/docs

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
    isort
    nose
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8 src tests setup.py
    isort --verbose --check-only --diff --recursive src tests setup.py

[testenv:coveralls]
deps =
    coveralls
    nose
skip_install = true
commands =
    coverage combine --append
    coverage report --omit="*test*"
    coveralls --merge=extension-coveralls.json []

[testenv:codecov]
deps =
    codecov
    nose 
skip_install = true
commands =
    coverage combine --append
    coverage report --omit="*test*"
    coverage xml --ignore-errors
    codecov []


[testenv:extension-coveralls]
deps =
    cpp-coveralls
    nose
skip_install = true
commands =
    coveralls --build-root=. --include=src --dump=extension-coveralls.json []

  

[testenv:report]
deps = coverage
       nose
skip_install = true
commands =
    coverage combine --append
    coverage report --omit="*test*"
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

